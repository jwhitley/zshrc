# John Whitley's .zenviron
# -- interactive shell environment settings
# Copyright (C) 2003-2012 John Whitley
#
# Based on an old .environ of 1985 lineage...

#
# TERMINAL SETUP
#

stty -ixon -ixoff                      # disable flow control

#
# rbenv & ndenv setup
#

# Ruby
if [[ -d ~/.rbenv ]]; then
    rbenv_paths=( ~/.rbenv/bin/rbenv /usr/local/bin/rbenv )
    filter-existing-paths rbenv_paths
    [[ -n "$rbenv_paths[1]" ]] && eval "$($rbenv_paths[1] init -)"
    unset rbenv_paths
fi

# Node
if [[ -d ~/.nodenv ]]; then
    nodenv_paths=( ~/.nodenv/bin/nodenv /usr/local/bin/nodenv )
    filter-existing-paths nodenv_paths
    [[ -n "$nodenv_paths[1]" ]] && eval "$($nodenv_paths[1] init -)"
    unset nodenv_paths
fi

#
# PROMPT SETUP
#

# Prompt settings, based on
#   http://blog.peepcode.com/blog/2012/my-command-line-prompt

function precmd() {
  # Align with zsh right-prompt, which has a one-space padding.
  local termwidth
  (( termwidth = ${COLUMNS} - 1 ))

  pr_git="$(~/local/bin/git-cwd-info.rb)"
  local pr_git_printable="${pr_git//\%\{+([^\%\}])\%\}/}"
  pr_git_fill="${(l:(( $termwidth - $#pr_git_printable )):)}"
}

# Combined left and right prompt configuration.
statussym="%(?,%{$fg[green]%}✓%{$reset_color%},%{$fg[red]%}✘%{$reset_color%})"

weak_set pr_birdtrack='>>'

# Change the machine color if we've detected a remote session
if [[ -n $ZSHRC_IS_REMOTE ]]; then
    prompt_machine_color=red
else
    prompt_machine_color=cyan
fi

PROMPT='${pr_git:+$pr_git_fill}${(e)pr_git}${pr_git:+
}%U%{$fg_bold[$prompt_machine_color]%}%m%f%u:${statussym}:%1~%(!.#.${pr_birdtrack}) %{$reset_color%}'

# Trigger a prompt reset when the keymap changes.  This is to ensure the vi
# mode is updated correctly when changing mode.
#
# Ref: http://stackoverflow.com/questions/3622943/zsh-vi-mode-status-line
#
function zle-line-init zle-keymap-select {
  if [[ -s ~/.nodenv ]]; then
    nodenv_version=`nodenv version-name 2>& /dev/null`
    if [[ $? -ne 0 ]]; then
        RPROMPT='${MODE_INDICATOR_PROMPT} %{$fg[red]%} no node%{${reset_color}%}'
    else
        RPROMPT='${MODE_INDICATOR_PROMPT} %{$fg[white]%} ${nodenv_version}%{${reset_color}%}'
    fi
  fi

  zle reset-prompt
}

zle -N zle-line-init
zle -N zle-keymap-select

#
# ZCHAIN SETUP -- ssh-agent utility
#

zchain-setup

#
# ENVIRONMENT -- PATH
#

# ---- BEGIN SETTINGS ----
#

# system path: Directories to prepend, append, and remove
 path_prepend=( $ZDOTDIR/local/$ZSHRC_OS/bin $ZDOTDIR/local/bin $ZDOTDIR/.local/bin \
                ~/.rbenv/bin ~/.rbenv/shims ~/.nodenv/bin ~/.nodenv/shims \
                ~/.cabal/bin ~/.cargo/bin \
                $path_prepend \
                /home/linuxbrew/.linuxbrew/bin /home/linuxbrew/.linuxbrew/sbin \
                ~/.homebrew/bin ~/.homebrew/sbin \
                /usr/local/bin /usr/local/sbin \
                /sbin /usr/sbin /usr/bin $SHELL:h )
  path_append=( $path_append )
path_unwanted=( . ~/bin ~ $path_unwanted )

#
# ---- END SETTINGS ----

## PATH SETUP

init-path path

# We can't add the python package-installed bin directory until after the
# main path is setup, so that we ask the correct python for sys.prefix:
if [[ ( -z $is_cygwin ) && ( ! -z `whence python` ) ]]; then
  path=($path `python -c 'import sys; import os.path; print os.path.join(sys.prefix,"bin")'`)
fi

## INFOPATH SETUP
 infopath_prepend=( ~/local/share/info )
  infopath_append=( )
infopath_unwanted=( )

init-path infopath

### KEYBINDING SETUP
#

# The default KEYTIMEOUT is 40 (ms) which creates an intolerable
# delay when hitting ESC to get out of the vi insert mode.
KEYTIMEOUT=1

# Eliminate problems with hitting <ESC><ESC> when in viins mode.
# The first <ESC> switches to vicmd, which then waits for follow-up input to
# the <ESC> prefix, consuming the next keystroke.
zle_noop () { }
zle -N zle_noop
bindkey -M vicmd '\e' zle_noop

# Make the zsh line editor (zle) respect '/' in paths as a word separator.
# Hallelujah!
export WORDCHARS=''

# Configure zsh-vim-mode cursors
MODE_CURSOR_VICMD="white block"
MODE_CURSOR_VIINS="green blinking bar"
MODE_CURSOR_SEARCH="green steady underline"

#
# CYGWIN SETUP
#

# This is a fix/workaround for readline under Cygwin not grokking
# the delete key in some installations.  It creates an
# ~/.inputrc file if needed.  We don't need to set INPUTRC
# explicitly; readline defaults to ~/.inputrc.
#
# from http://www.blender3d.org/cms/Building_with_Cygwin.524.0.html
#
if [[ -n $is_cygwin ]]; then
    local my_inputrc=~/.inputrc
    if [[ ! -e $my_inputrc ]]; then
        print "WARNING: No $my_inputrc file found for Cygwin installation.\n         Creating $my_inputrc now..."
        echo '"\\e[3~":    delete-char' > $my_inputrc
    fi
    if [[ ! -z "$INPUTRC" ]]; then
        print "WARNING: \$INPUTRC has been explicitly set"
    fi

    # Bind Home and End keys if we're stuck in the cygwin/cmd terminal
    if [[ "$TERM" == cygwin ]]; then
        bindkey "\e[1~" beginning-of-line       # Home
        bindkey "\e[4~" end-of-line             # End
    fi
fi

#
# ENVIRONMENT -- editor and pager setup
#
vim_order=( nvim vim vi )

for vim in $vim_order; do
    export VIM_EDITOR=`command -v $vim`
    [[ -n "$VIM_EDITOR" ]] && break
done

export EDITOR="$VIM_EDITOR"
export VISUAL=$EDITOR

# Don't override a platform-specific setting
weak_export GVIM_EDITOR=$VIM_EDITOR

export PAGER=`whence less`

# If we're in a git repo, use git ls-tree, otherwise use fd
export FZF_DEFAULT_COMMAND='(git ls-tree -r --name-only HEAD || \
  find . -path "*/\.*" -prune -o -type f -print -o -type l -print |
  sed s/^..//) 2> /dev/null'

export COFFEELINT_CONFIG=~/.coffeelint

# Less:
#   -i  ignore case in searches
#   -R  Display raw control characters, but try to keep track of screen appearance
export LESS='-iR'
#   Less input filter: script to auto-uncompress .Z, .gz., .bz2 files
lessfilter=~/local/bin/lesspipe.sh
if [[ -x $lessfilter ]]; then
    export LESSOPEN="| \"$lessfilter\" %s"
else
    echo ".zenviron could not find less filter script: $lessfilter"
fi

#
# Tmuxinator setup
#

[[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator

# Local Variables:
# mode: shell-script
# End:
# vim:ft=zsh:sw=4:sts=4:
